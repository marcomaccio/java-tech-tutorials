package name.marmac.tutorials.java.cxf.services.web.soap.personservice;

import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.6
 * 2014-08-18T12:37:05.680+02:00
 * Generated source version: 2.7.6
 * 
 */
@WebServiceClient(name = "PersonProvisioningService", 
                  wsdlLocation = "classpath:WEB-INF/wsdl/personProvisioningService.wsdl",
                  targetNamespace = "http://marmac.name/tutorials/java/cxf/services/web/soap/personservice/") 
public class PersonProvisioningService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://marmac.name/tutorials/java/cxf/services/web/soap/personservice/", "PersonProvisioningService");
    public final static QName PersonProvisioningPort = new QName("http://marmac.name/tutorials/java/cxf/services/web/soap/personservice/", "PersonProvisioningPort");
    static {
        URL url = PersonProvisioningService.class.getClassLoader().getResource("WEB-INF/wsdl/personProvisioningService.wsdl");
        if (url == null) {
            java.util.logging.Logger.getLogger(PersonProvisioningService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "classpath:WEB-INF/wsdl/personProvisioningService.wsdl");
        }       
        WSDL_LOCATION = url;   
    }

    public PersonProvisioningService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public PersonProvisioningService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public PersonProvisioningService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PersonProvisioningService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PersonProvisioningService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public PersonProvisioningService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns PersonProvisioningPortType
     */
    @WebEndpoint(name = "PersonProvisioningPort")
    public PersonProvisioningPortType getPersonProvisioningPort() {
        return super.getPort(PersonProvisioningPort, PersonProvisioningPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns PersonProvisioningPortType
     */
    @WebEndpoint(name = "PersonProvisioningPort")
    public PersonProvisioningPortType getPersonProvisioningPort(WebServiceFeature... features) {
        return super.getPort(PersonProvisioningPort, PersonProvisioningPortType.class, features);
    }

}
